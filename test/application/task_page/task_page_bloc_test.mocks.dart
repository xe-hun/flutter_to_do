// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_to_do/test/application/task_page/task_page_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_to_do/domain/core/failures.dart' as _i6;
import 'package:flutter_to_do/domain/tasks/tasks_collection.dart' as _i7;
import 'package:flutter_to_do/infrastructure/data_source/save_box.dart' as _i2;
import 'package:flutter_to_do/infrastructure/repository/task_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSaveBox_0 extends _i1.SmartFake implements _i2.SaveBox {
  _FakeSaveBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TaskRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRepository extends _i1.Mock implements _i4.TaskRepository {
  @override
  _i2.SaveBox get datasource => (super.noSuchMethod(
        Invocation.getter(#datasource),
        returnValue: _FakeSaveBox_0(
          this,
          Invocation.getter(#datasource),
        ),
        returnValueForMissingStub: _FakeSaveBox_0(
          this,
          Invocation.getter(#datasource),
        ),
      ) as _i2.SaveBox);
  @override
  _i5.Future<_i3.Either<_i6.Failure<dynamic>, List<_i7.TasksCollection>>>
      getAllTasks() => (super.noSuchMethod(
            Invocation.method(
              #getAllTasks,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure<dynamic>,
                        List<_i7.TasksCollection>>>.value(
                _FakeEither_1<_i6.Failure<dynamic>, List<_i7.TasksCollection>>(
              this,
              Invocation.method(
                #getAllTasks,
                [],
              ),
            )),
            returnValueForMissingStub: _i5.Future<
                    _i3.Either<_i6.Failure<dynamic>,
                        List<_i7.TasksCollection>>>.value(
                _FakeEither_1<_i6.Failure<dynamic>, List<_i7.TasksCollection>>(
              this,
              Invocation.method(
                #getAllTasks,
                [],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure<dynamic>, List<_i7.TasksCollection>>>);
  @override
  _i5.Future<
      _i3.Either<
          _i6.Failure<dynamic>,
          _i7
              .TasksCollection>> getSingleTasksCollection(
          {required int? tasksCollectionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleTasksCollection,
          [],
          {#tasksCollectionId: tasksCollectionId},
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>>.value(
            _FakeEither_1<_i6.Failure<dynamic>, _i7.TasksCollection>(
          this,
          Invocation.method(
            #getSingleTasksCollection,
            [],
            {#tasksCollectionId: tasksCollectionId},
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>>.value(
            _FakeEither_1<_i6.Failure<dynamic>, _i7.TasksCollection>(
          this,
          Invocation.method(
            #getSingleTasksCollection,
            [],
            {#tasksCollectionId: tasksCollectionId},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>> saveTask(
          {required _i7.TasksCollection? tasksCollection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTask,
          [],
          {#tasksCollection: tasksCollection},
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>>.value(
            _FakeEither_1<_i6.Failure<dynamic>, _i7.TasksCollection>(
          this,
          Invocation.method(
            #saveTask,
            [],
            {#tasksCollection: tasksCollection},
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>>.value(
            _FakeEither_1<_i6.Failure<dynamic>, _i7.TasksCollection>(
          this,
          Invocation.method(
            #saveTask,
            [],
            {#tasksCollection: tasksCollection},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i7.TasksCollection>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i3.Unit>> deleteTasksCollection(
          {required int? tasksCollectionId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTasksCollection,
          [],
          {#tasksCollectionId: tasksCollectionId},
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i3.Unit>>.value(
                _FakeEither_1<_i6.Failure<dynamic>, _i3.Unit>(
          this,
          Invocation.method(
            #deleteTasksCollection,
            [],
            {#tasksCollectionId: tasksCollectionId},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i3.Unit>>.value(
                _FakeEither_1<_i6.Failure<dynamic>, _i3.Unit>(
          this,
          Invocation.method(
            #deleteTasksCollection,
            [],
            {#tasksCollectionId: tasksCollectionId},
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure<dynamic>, _i3.Unit>>);
}
